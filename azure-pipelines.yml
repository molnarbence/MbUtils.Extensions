# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
    - '*'
  tags:
    include:
    - '*'

pr: none

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  buildConfiguration: 'Release'
  buildVersion: '3.1.0'

jobs:
  - job: tsts
    displayName: 'Test job'
    steps:
    - script: |
        VERSION=$(echo $(Build.SourceBranch) | sed -e 's,.*/\(.*\),\1,')
        echo 'Last part: $VERSION'
      displayName: 'Test step 1'

    - script: |
        VERSION=$(echo $(Build.SourceBranch) | sed -e 's,.*/\(.*\),\1,')
        echo 'Last part: $VERSION'
        VERSION=$(echo $VERSION | sed -e 's/^v//')
        echo 'Pure version: $VERSION'
      displayName: 'Test step 2'
      condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags'))
# - script: | 
#     dotnet build --configuration $(buildConfiguration)
#     dotnet test test/MbUtils.Extensions.Core.Tests --configuration $(buildConfiguration) --logger trx
#   displayName: 'dotnet build&test $(buildConfiguration)'

# - task: PublishTestResults@2
#   condition: succeededOrFailed()
#   inputs:
#     testRunner: VSTest
#     testResultsFiles: '**/*.trx'

# # Below are for tags branch only
# # conditioned with: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))

# - script: |
#     echo "##vso[task.setvariable variable=tagName]crushed tomatoes"
#     dotnet pack -c $(buildConfiguration) -o $(Build.ArtifactStagingDirectory) -p:PackageVersion=$(buildVersion)
#   displayName: "dotnet pack"
#   condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))


# - task: PublishBuildArtifacts@1
#   displayName: 'Publish build artifacts'
#   inputs:
#     pathtoPublish: '$(Build.ArtifactStagingDirectory)'
#     artifactName: drop
#   condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))


# - task: NuGetCommand@2
#   displayName: 'nuget push'
#   inputs:
#     command: push
#     nuGetFeedType: external
#     publishFeedCredentials: 'nuget_mb_extensions'
#   condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
